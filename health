from google.colab import files
uploaded = files.upload()
CSV_PATH = list(uploaded.keys())[0]

import warnings, json
warnings.filterwarnings("ignore")
import numpy as np, pandas as pd, matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
from sklearn.pipeline import Pipeline
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error, accuracy_score, f1_score, roc_auc_score, confusion_matrix
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor, RandomForestClassifier, GradientBoostingClassifier

RANDOM_STATE = 42
TEST_SIZE = 0.2
N_JOBS = -1

# Load CSV
df = pd.read_csv(CSV_PATH)
drop_like = [c for c in df.columns if any(k in c.lower() for k in ["url","image","img","photo","link","thumbnail"])]
if drop_like: df = df.drop(columns=drop_like)

# Convert numeric
num_cols_all = ["calories","protein_g","carbs_g","fat_g","fiber_g","sugar_g","sodium_mg","cholesterol_mg","serving_size_g","prep_time_min","cook_time_min","rating"]
for c in num_cols_all:
    if c in df.columns: df[c] = pd.to_numeric(df[c], errors="coerce")

# Convert health column
if "is_healthy" in df.columns:
    if df["is_healthy"].dtype == object:
        df["is_healthy"] = df["is_healthy"].astype(str).str.strip().str.lower().map({"yes":1,"true":1,"1":1,"no":0,"false":0,"0":0})
    df["is_healthy"] = pd.to_numeric(df["is_healthy"], errors="coerce").astype("Int64")

# Categorical and numeric
cat_cols = [c for c in ["cuisine","meal_type","diet_type","cooking_method"] if c in df.columns]
num_cols = [c for c in ["calories","protein_g","carbs_g","fat_g","fiber_g","sugar_g","sodium_mg","cholesterol_mg","serving_size_g","prep_time_min","cook_time_min"] if c in df.columns]

